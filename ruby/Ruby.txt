Ruby memory management and Garbage Collection


Ruby uses two types of heap for memory allocation 
1. malloc heap(strings & data structures)
2. object heap(ruby object)


Ruby Garbage Collection explanation in general 

when an object is created memory is allocated for it. the object  stays for a while hopefully doing some work then after object is no longer in
use then ruby marks the section of the object memory as available for future use by another objects

Ruby heap is split into pages, pages contain slot, slot stores the object reference

Ruby uses mark sweep algorithm for Garbage Collection with tricolor mark

Initial process
the Garbage Collector examines the objects in the ruby heap tags with a white flag

next step
the Garbage  Collector all the objects that are acessible , these may variable or constants in the current scope and they are marked as gray flag

final step
gray flag objects are marked as black flag if the objects are in use

mark phase
white flags objects that are not connected to black flag object that are deleted this complete the mark phase

sweep phase
memory is returned to heap which was allocated to the white  flag objects this is called sweep phase


